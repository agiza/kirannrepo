#!/bin/bash
EMAIL="bryan.phinney@altisource.com"

#Check for the presence of our variables that we need.
if [ "$1" == "" ] || [ "$2" == "" ]; then
        echo "You must include a username and email address for this script."; exit 1
fi

#Set the Realm for our repo, we can go back to apache serving if we need to later.
# auth realm for digest auth
AUTH_REALM="Cloud OpenVPN Certificate repository"

#Set the variables based on input options
USER_NAME=$1
EMAIL_ADDRESS=$2

if [ -d /home/ubuntu/vpn/certficates/$USER_NAME ]; then
        echo "vpn directory already exists."
else
#Make the directory to store the certificates for resending.
mkdir -p $HOME/vpn/certificates/$USER_NAME
# This sets the access directives if we want to turn apache back on.
echo "     AuthName \"Cloud OpenVPN Certificate repository\"
     AuthType Digest 
     AuthUserFile $HOME/vpn/certificates/$USER_NAME/.htdigest
     AuthGroupFile /dev/null
     <Limit GET>
     require valid-user
     </Limit>" > $HOME/vpn/certificates/$USER_NAME/.htaccess
fi

# This creates a symbolic link for easy access for apache serving, if there is already a link or file, it skips.
if [ ! -f $HOME/vpn/$USER_NAME ]; then
        ln -s $HOME/vpn/certificates/$USER_NAME $HOME/vpn/$USER_NAME
fi

if [ -f /home/ubuntu/vpn/certificates/$USER_NAME/.htdigest ]; then
        echo "htdigest already created."
else
# These are used for handling the htdigest which controls apache access if needed.
# htdigest file, needs to exist
HTDIGEST_FILE=$HOME/vpn/certificates/$USER_NAME/.htdigest

#htdigest_hash=`printf $USER_NAME:$AUTH_REALM:$USER_NAME | md5sum -`
HTUSER=$USER_NAME HTREALM=$AUTH_REALM HTPASSWORD=$USER_NAME && (echo -n "$HTUSER:$HTREALM:" && echo -n "$HTUSER:$HTREALM:$HTPASSWORD" | md5sum | cut -b -32) >> $HTDIGEST_FILE

fi

# This calls the script that generates the certificates after the other stuff is done.
$HOME/bin/client-key.sh $USER_NAME

if [ "$?" -gt "0" ]; then
        echo "Non-standard exit code means this step can not proceed."
else
# This calls the text and pipes it to mutt to send an email containing the certs and instructions to the email address provided.
#working_dir=$USER_NAME-`date +%y%m%d%h%m`
#mkdir -p /tmp/$working_dir
#cd /tmp/$working_dir

cat $HOME/vpn-text/openvpn_client_config.txt | sed -e s/userid/$USER_NAME/g | mutt -x $EMAIL_ADDRESS -a $HOME/vpn/$USER_NAME/$USER_NAME.tar.gz -s "OpenVPN Client Certificates"

fi

# This section will automatically push changes to the webserver to serve them locally.
rsync -e ssh -av --delete /home/ubuntu/vpn/certificates/ 10.0.1.111:/home/ubuntu/vpn/certificates/
# This checks for success codes and if they are not there, let the user know.
if [ "$?" -lt "1" ]; then
        echo "Certficates created and mail sent, certificates have been stored.  Backup certificates are stored in the vpn/certificates/username directories."
else
        echo "There might have been a problem with the email, please check the logs and resend if necessary."; exit 1
fi

