mongo:
  host: "<%= @mongo [:host] %>"
  db: "<%= @mongo [:database] %>"
rabbit:
  host: <%= @amqp[:host] %>
  username: <%= @amqp[:username] %>
  password: <%= @amqp[:password] %>
  vhost: <%= @amqp[:vhost] %>
database:
  # the name of your JDBC driver
  driverClass: com.mysql.jdbc.Driver

  # the username
  user: "<%= @mysqldb['rdoc_dbuser'] %>"

  # the password
  password: "<%= @mysqldb['rdoc_dbpass'] %>"

  # the JDBC URL
  url: jdbc:mysql://<%= node[:db_server] %>:<%= node[:db_port] %>/<%= @mysqldb['rdoc_dbname'] %>?autoReconnect=true

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

# TODO find proper keys!
#  # how long a connection must be held before it can be validated
#  validationInterval: 10s
#
#  # the maximum lifetime of an idle connection
#  closeConnectionIfIdleFor: 1 minute
logging:
  level: INFO

swagger:
  enabled: true

#TODO add microservice section 

server:
  applicationConnectors:
      - type: http
        port: <%= @microservice['maitred_app_port'] %>
  adminConnectors:
    - type: http
      port: <%= @microservice['maitred_adm_port'] %>
