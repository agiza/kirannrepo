rabbit.server.host=<%= @amqphost %>
rabbit.server.port=<%= @amqpport %>
rabbit.server.username=<%= @amqpuser %>
rabbit.server.password=<%= @amqppass %>
rabbit.server.vhost=<%= node[:realservice_amqp_vhost] %>
rabbit.server.channelCacheSize=100

journal.replication.consumers=40
journal.replication.jsonJournalTOTransformer.type=com.altisource.rsng.replication.domain.JournalTO
#journal.response.handling.jsonJournalResponseTransformer.type=com.altisource.rsng.replication.poc.domain.JournalResponse
journal.response.handling.jsonJournalResponseTransformer.type=com.altisource.rsng.replication.domain.JournalResponse

resequencer.period=30000
resequencer.recentlyProcessedFifoBufferSize=1000

watchdog.maxRecords=250
watchdog.watchdogDelay=300000
watchdog.poller.autoStartup=true
watchdog.poller.period=30000
watchdog.reprocessingThreshold=2
watchdog.reprocessingQuietPeriod=5
watchdog.hardLimitThreshold=12

rf.db.driver=com.mysql.jdbc.Driver
jdbc.driverClassName.progress=com.ddtek.jdbc.openedge.OpenEdgeDriver

jdbc.url.progress.journal=jdbc:datadirect:openedge://<%= @projourdb["projourdb_server"] %>:<%= @projourdb["projourdb_port"] %>;databaseName=journal.db
jdbc.username.progress.journal=<%= @projourdb["projourdb_dbuser"] %>
jdbc.password.progress.journal=<%= @projourdb["projourdb_dbpass"] %>
jdbc.initial-size.progress.journal=10
jdbc.min-idle.progress.journal=0
jdbc.max-idle.progress.journal=10
jdbc.maxActive.progress.journal=20

rf.db.url=jdbc:mysql://<%= node[:db_server] %>:<%= node[:db_port] %>/<%= @mysqldb["rsng_dbname"] %>?zeroDateTimeBehavior=convertToNull&connectTimeout=180000&socketTimeout=180000
rf.db.username=<%= @mysqldb["rsng_dbuser"] %>
rf.db.password=<%= @mysqldb["rsng_dbpass"] %>
rf.db.initialSize=<%= node[:db_initsize] %>
rf.db.minIdle=0
rf.db.maxIdle=10
rf.db.maxActive=50

rfTenant.code=TENANT1
###################################
# support for active / passive HA #
###################################
ha.lockTableName=rs_lock_table
ha.sleepTime=1000

#modifies Jackson ObjectMapper behavior to expect upper case field names in input
json.expectFieldsAsUpperCase=false
#Set Jackson ObjectMapper to convert all incoming field names to uppercase.  (could slow parsing)
json.parseFieldsAsUpperCase=false
#Defer initializing mappings loaded from meta data until first use
mapping.lazyInit=false

#############################################################
#######  Melissa Settings  ##################################
#############################################################


rf.melissadata.name.webhost=<%= @melissadata['nameurl'] %>
rf.melissadata.address.webhost=<%= @melissadata['addressurl'] %>
rf.melissadata.geocode.webhost=<%= @melissadata['geocodeurl'] %>
rf.melissadata.phone.webhost=<%= @melissadata['phoneurl'] %>
rf.melissadata.email.webhost=<%= @melissadata['emailurl'] %>

#Set our melissa customerId used to identify us to melissa's services
rf.melissadata.customerId=102942719

#Set the socket connection timeout for the underlying HttpClient in milliseconds.
#0 is never timeout.
#Default is 0 - no timeout
rf.dataquality.connectTimeout=30000

#Set the socket read timeout for the underlying HttpClient in milliseconds.
#0 is never timeout.
#Default is 0 - no timeout
rf.dataquality.readTimeout=30000

#Set the max threads for the call outs to melissa services
#Default is 20
rf.dataquality.httpPool.maxTotal=20

#?
#Default is 2
rf.dataquality.httpPool.defaultMaxPerRoute=2

#melissa.callOutForNameParses=true/false
#Default is false
melissa.callOutForNameParses=false

#melissa.callOutForAddressCorrections=ALWAYS|ON_ERRORS|NEVER
#Default is ON_ERRORS
#See below for details
melissa.callOutForAddressCorrections=ALWAYS

addressStandardizer.batchRecordsSize=1000
addressStandardizer.poller.autoStartup=false

addressStandardizer.poller.period=3600000

#ALWAYS
#=========
#Call melissa
#If found
#  Correct address & references
#  Save
#Else
#  null the city, state, zip, and fips
#  Write to the raw table
#  Save

#ON_ERRORS
#=========
#Db lookup for melissa references
#If found
#  Correct address & references
#  Save
#Else
#  Call melissa
#  If found
#    Correct address & references
#    Save
#  Else
#    null the city, state, zip, and fips
#    Write to the raw table
#    Save

#NEVER
#=========
#Db lookup for melissa references
#If found
#  Correct address & references
#  Save
#Else
#  null the city, state, zip, and fips
#  Write to the raw table
#  Save
