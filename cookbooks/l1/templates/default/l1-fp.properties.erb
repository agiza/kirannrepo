rt.amqp.host=<%= @amqphost %>
rt.amqp.port=<%= @amqpport %>
rt.amqp.username=<%= @amqpuser %>
rt.amqp.password=<%= @amqppass %>
rt.amqp.virtual-host=<%= node[:l1_amqp_vhost] %>

rf.ldap.port=<%= @ldapserver['ldaphost'].split(":")[1] %>
rf.ldap.url=ldap://<%= @ldapserver['ldaphost'].split(":")[0] %>:<%= @ldapserver['ldaphost'].split(":")[1] %>
rf.ldap.searchBase=<%= @ldapserver['searchbase'] %>

#vendor order app config related.
rt.vendor.order.app.config.name=valuation
rt.vendor.order.app.config.version=1.0
rt.vendor.order.process.definition.key=VendorOrderMainProcess

#Vendor Certification app config related.
rt.vendor.certification.app.config.name=certification
rt.vendor.certification.app.config.version=1.0
rt.vendor.certification.process.definition.key=VendorCertificationMainProcess
rt.vendor.certification.candidateGroup=Credential Review Team

rt.amqp.exchange.avm.request=rt.avm.request
rt.vendor.portal.url=http://<%= @webHostname %>/l1-vp
rt.vendor.permission.category.name=VENDOR_PERMISSION_CATEGORY
rt.registration.portal.url=http://<%= @webHostname %>/l1-reg

#Settings for realdoc integration
rd.remote.url=http://<%= @realdoc_hostname %>/realdoc/api
rd.remote.defaultUsername=correspondence
rd.remote.singleUserMode=true


rt.vendor.valuation.facilitator.candidateGroup=FACILITATOR GROUP
rt.vendor.valuation.sourcing.candidateGroup=Sourcing Team
rt.vendor.exposure.cycle.profile.code=TEST

rt.central.webServiceUrl=http://<%= @l1_cen_host %>/l1-central

rt.credential.expiration.monitor.cron.expression=0 0 1 * * ?
rt.credential.expiration.monitor.app.config.name=certification
rt.credential.expiration.monitor.app.config.version=1.0
rt.credential.expiration.monitor.process.definition.key=CredentialExpirationMonitoringProcess

rf.db.showSql=false
rf.db.generateDdl=false
rf.db.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
rf.documentService.baseDirectoryPath=/opt/tomcat/storage/docs
rf.documentService.baseTemplatePath=/opt/tomcat/webapps/l1-fp/WEB-INF/classes/templates
rf.templateService.baseDirectoryPath=/opt/tomcat/webapps/l1-fp/WEB-INF/classes/templates
rf.tenantCode=<%= node[:tenantid] %>
rf.security.requiredApplicationPermissions=RT.FP.LOGIN

rf.multipartResolver.maxUploadSize=10485760

rf.melissadata.address.webhost=<%= @melissadata['addressurl'] %>
rf.melissadata.phone.webhost=<%= @melissadata['phoneurl'] %>
rf.melissadata.email.webhost=<%= @melissadata['emailurl'] %>
rf.melissadata.customerId=102942719
rf.melissadata.defaultMaxConnectionsPerHost=1
rf.melissadata.geocode.webhost=<%= @melissadata['geocodeurl'] %>
rf.melissadata.name.webhost=<%= @melissadata['nameurl'] %>

rf.email.host=<%= @mailserver['host'].split(":")[0] %>
rf.email.port=<%= @mailserver['host'].split(":")[1] %>
rf.email.username=<%= @mailserver['user'] %>
rf.email.password=<%= @mailserver['pass'] %>

internalDomains=

rf.ui.config.logoLink=http://www.altisource11.com/
rf.ui.config.termsAndConditionsLink=http://www.altisource.com/terms
rf.ui.config.privacyPolicyLink=http://www.altisource.com/privacy
brandName=cichlid

rf.startupFileLocation=file:${catalina.base}/startup.xml

rf.activiti.databaseSchemaUpdate=false

rf.security.lockoutWindowMinsDefault=60
rf.security.maxBadLoginsDefault=3
rf.security.password.alphaMinDefault=1
rf.security.password.lengthDefault=6
rf.security.password.lowerCaseMinDefault=1
rf.security.password.nonAlphaMinDefault=0
rf.security.password.numericMinDefault=1
rf.security.password.upperCaseMinDefault=1
rf.security.passwordTokenExpiryMinsDefault=600

rf.newUserTemplate=classpath:/rt_vrp_newUserTemplate.html
rf.newUserTemplateCode=EmailAddressConfirmation
rf.newUserSubject=Welcome!
rf.passwordResetTemplate=classpath:/passwordResetTemplate.html
rf.passwordResetTemplateCode=RegPChangePassword
rf.passwordResetSubject=Password Reset
rf.userNotificationFromAddress=<%= node[:mail_from] %>

rf.defaultPlugin=taskplanner

rf.app.context.path=<%= @webHostname %>/l1-fp

<% if node.run_list?('role[implementer]') -%>
rf.startupAuthenticationProvider.enabled=true 
<% else -%>
rf.startupAuthenticationProvider.enabled=false
<% end -%>
rf.daoAuthenticationProvider.enabled=<%= node[:rf_dao_flag] %>
rf.ldapAuthenticationProvider.enabled=<%= node[:rf_ldap_flag] %>
<% if node.attribute?('rf_app_config_flag') -%>
rf.overwriteAppConfigArtifacts=true
<% end -%>

rf.automaticTaskAssignment.enabled=true
